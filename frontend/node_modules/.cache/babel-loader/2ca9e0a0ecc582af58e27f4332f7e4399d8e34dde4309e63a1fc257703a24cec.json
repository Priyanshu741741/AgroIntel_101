{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Priyanshu\\\\OneDrive\\\\Desktop\\\\crop-monitoring-app - Copy\\\\frontend\\\\src\\\\components\\\\ImageUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Form, Button, Alert, Spinner } from 'react-bootstrap';\nimport { analyzeImage } from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ImageUpload = ({\n  onAnalysisComplete\n}) => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [previewUrl, setPreviewUrl] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      setSelectedFile(file);\n\n      // Create preview URL\n      const reader = new FileReader();\n      reader.onload = () => {\n        setPreviewUrl(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!selectedFile) {\n      setError('Please select an image to analyze');\n      return;\n    }\n    setIsLoading(true);\n    setError(null);\n    try {\n      const result = await analyzeImage(selectedFile);\n      onAnalysisComplete(result, previewUrl);\n    } catch (error) {\n      setError('Error analyzing image. Please try again.');\n      console.error(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Upload Crop Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Select an image of your crop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"file\",\n          onChange: handleFileChange,\n          accept: \"image/*\",\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: \"For best results, ensure the image clearly shows the plant's leaves.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), previewUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-preview mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: previewUrl,\n          alt: \"Preview\",\n          style: {\n            maxWidth: '100%',\n            maxHeight: '300px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        disabled: !selectedFile || isLoading,\n        children: isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Spinner, {\n            as: \"span\",\n            animation: \"border\",\n            size: \"sm\",\n            role: \"status\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ms-2\",\n            children: \"Analyzing...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : 'Analyze Image'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUpload, \"xD3BqUURk82SP92PO9ku7VZxUCA=\");\n_c = ImageUpload;\nexport default ImageUpload;\nvar _c;\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["React","useState","Form","Button","Alert","Spinner","analyzeImage","jsxDEV","_jsxDEV","Fragment","_Fragment","ImageUpload","onAnalysisComplete","_s","selectedFile","setSelectedFile","previewUrl","setPreviewUrl","isLoading","setIsLoading","error","setError","handleFileChange","event","file","target","files","reader","FileReader","onload","result","readAsDataURL","handleSubmit","preventDefault","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onSubmit","Group","Label","Control","type","onChange","accept","disabled","Text","src","alt","style","maxWidth","maxHeight","as","animation","size","role","_c","$RefreshReg$"],"sources":["C:/Users/Priyanshu/OneDrive/Desktop/crop-monitoring-app - Copy/frontend/src/components/ImageUpload.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Form, Button, Alert, Spinner } from 'react-bootstrap';\r\nimport { analyzeImage } from '../services/api';\r\n\r\nconst ImageUpload = ({ onAnalysisComplete }) => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [previewUrl, setPreviewUrl] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      setSelectedFile(file);\r\n      \r\n      // Create preview URL\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        setPreviewUrl(reader.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    \r\n    if (!selectedFile) {\r\n      setError('Please select an image to analyze');\r\n      return;\r\n    }\r\n    \r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const result = await analyzeImage(selectedFile);\r\n      onAnalysisComplete(result, previewUrl);\r\n    } catch (error) {\r\n      setError('Error analyzing image. Please try again.');\r\n      console.error(error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"upload-container\">\r\n      <h3>Upload Crop Image</h3>\r\n      \r\n      {error && <Alert variant=\"danger\">{error}</Alert>}\r\n      \r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Select an image of your crop</Form.Label>\r\n          <Form.Control \r\n            type=\"file\" \r\n            onChange={handleFileChange}\r\n            accept=\"image/*\"\r\n            disabled={isLoading}\r\n          />\r\n          <Form.Text className=\"text-muted\">\r\n            For best results, ensure the image clearly shows the plant's leaves.\r\n          </Form.Text>\r\n        </Form.Group>\r\n        \r\n        {previewUrl && (\r\n          <div className=\"image-preview mb-3\">\r\n            <img \r\n              src={previewUrl} \r\n              alt=\"Preview\" \r\n              style={{ maxWidth: '100%', maxHeight: '300px' }} \r\n            />\r\n          </div>\r\n        )}\r\n        \r\n        <Button \r\n          variant=\"primary\" \r\n          type=\"submit\"\r\n          disabled={!selectedFile || isLoading}\r\n        >\r\n          {isLoading ? (\r\n            <>\r\n              <Spinner\r\n                as=\"span\"\r\n                animation=\"border\"\r\n                size=\"sm\"\r\n                role=\"status\"\r\n                aria-hidden=\"true\"\r\n              />\r\n              <span className=\"ms-2\">Analyzing...</span>\r\n            </>\r\n          ) : (\r\n            'Analyze Image'\r\n          )}\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}